<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="3" failed="0" total="3" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="672" started-at="2016-04-13T18:08:32Z" finished-at="2016-04-13T18:08:32Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="672" started-at="2016-04-13T18:08:32Z" finished-at="2016-04-13T18:08:32Z">
      <class name="com.actime.reporttest.ReportTest">
        <test-method status="FAIL" signature="configBeforeClass()[pri:0, instance:com.actime.reporttest.ReportTest@3f3afe78]" name="configBeforeClass" is-config="true" duration-ms="0" started-at="2016-04-13T23:38:32Z" finished-at="2016-04-13T23:38:32Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: D:\Users\Qsp-tyy-24\Desktop\server\IEDriverServer.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: D:\Users\Qsp-tyy-24\Desktop\server\IEDriverServer.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:199)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:121)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:116)
	at org.openqa.selenium.ie.InternetExplorerDriverService.access$0(InternetExplorerDriverService.java:1)
	at org.openqa.selenium.ie.InternetExplorerDriverService$Builder.findDefaultExecutable(InternetExplorerDriverService.java:167)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296)
	at org.openqa.selenium.ie.InternetExplorerDriver.setupService(InternetExplorerDriver.java:251)
	at org.openqa.selenium.ie.InternetExplorerDriver.<init>(InternetExplorerDriver.java:172)
	at org.openqa.selenium.ie.InternetExplorerDriver.<init>(InternetExplorerDriver.java:146)
	at com.acttime.genericlib.BrowserDriver.getBrowser(BrowserDriver.java:18)
	at com.actime.reporttest.ReportTest.configBeforeClass(ReportTest.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBeforeClass -->
        <test-method status="SKIP" signature="beforMtd()[pri:0, instance:com.actime.reporttest.ReportTest@3f3afe78]" name="beforMtd" is-config="true" duration-ms="0" started-at="2016-04-13T23:38:32Z" finished-at="2016-04-13T23:38:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforMtd -->
        <test-method status="SKIP" signature="createReportTest()[pri:0, instance:com.actime.reporttest.ReportTest@3f3afe78]" name="createReportTest" duration-ms="2" started-at="2016-04-13T23:38:32Z" finished-at="2016-04-13T23:38:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createReportTest -->
        <test-method status="SKIP" signature="afterMtd()[pri:0, instance:com.actime.reporttest.ReportTest@3f3afe78]" name="afterMtd" is-config="true" duration-ms="0" started-at="2016-04-13T23:38:32Z" finished-at="2016-04-13T23:38:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMtd -->
        <test-method status="SKIP" signature="beforMtd()[pri:0, instance:com.actime.reporttest.ReportTest@3f3afe78]" name="beforMtd" is-config="true" duration-ms="0" started-at="2016-04-13T23:38:32Z" finished-at="2016-04-13T23:38:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforMtd -->
        <test-method status="SKIP" signature="deleteReportTest()[pri:0, instance:com.actime.reporttest.ReportTest@3f3afe78]" name="deleteReportTest" duration-ms="1" started-at="2016-04-13T23:38:32Z" finished-at="2016-04-13T23:38:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteReportTest -->
        <test-method status="SKIP" signature="afterMtd()[pri:0, instance:com.actime.reporttest.ReportTest@3f3afe78]" name="afterMtd" is-config="true" duration-ms="0" started-at="2016-04-13T23:38:32Z" finished-at="2016-04-13T23:38:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMtd -->
        <test-method status="SKIP" signature="beforMtd()[pri:0, instance:com.actime.reporttest.ReportTest@3f3afe78]" name="beforMtd" is-config="true" duration-ms="0" started-at="2016-04-13T23:38:32Z" finished-at="2016-04-13T23:38:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforMtd -->
        <test-method status="SKIP" signature="modifyReportTest()[pri:0, instance:com.actime.reporttest.ReportTest@3f3afe78]" name="modifyReportTest" duration-ms="0" started-at="2016-04-13T23:38:32Z" finished-at="2016-04-13T23:38:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modifyReportTest -->
        <test-method status="SKIP" signature="afterMtd()[pri:0, instance:com.actime.reporttest.ReportTest@3f3afe78]" name="afterMtd" is-config="true" duration-ms="0" started-at="2016-04-13T23:38:32Z" finished-at="2016-04-13T23:38:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMtd -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:com.actime.reporttest.ReportTest@3f3afe78]" name="afterClass" is-config="true" duration-ms="0" started-at="2016-04-13T23:38:32Z" finished-at="2016-04-13T23:38:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.actime.reporttest.ReportTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
